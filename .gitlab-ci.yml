services:
  - name: docker:dind
    command: ["--tls=false"]

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  TESTCONTAINERS_HOST_OVERRIDE: "host.docker.internal"
  ALLURE_OUTPUT_PATH: "/builds/mta21u184/sigma-music-test"

stages:
  - test
  #  - report history
  #  - unit-test
  #  - integration-test
  #  - e2e-test
  #  - report 
install:
  stage: test
  script: 
    - apt install default-jre
    - wget https://github.com/allure-framework/allure2/releases/download/2.18.1/allure_2.18.1-1_all.deb
    - dpkg -i allure_2.18.1-1_all.deb
    - allure --help
  allow_failure: true

    #collect_report_history:
    #  stage: report history
    #  script:
    #    - echo $CI_COMMIT_BRANCH
    #    - echo $REPORT_TOKEN
    #    - 'curl --header "PRIVATE-TOKEN: $REPORT_TOKEN" --location "https://git.iu7.bmstu.ru/api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/$CI_COMMIT_BRANCH/download?job=report" --output artifacts.zip' 
    #    - unzip artifacts.zip
    #    - mkdir -p ./allure-results
    #    - cp -r ./allure-report/history ./allure-results
    #  allow_failure: true
    #  artifacts:
    #    paths:
    #      - ./allure-results
    #    expire_in: 1 day
    #  rules:
    #    - when: always
    #
    #unit:
    #  stage: unit-test
    #  image: golang:1.22
    #  script: go test -shuffle on ./internal/service/test/unit 
    #    ./internal/adapters/repository/postgres/test/ -v --parallel 4
    #  artifacts:
    #    paths:
    #      - allure-results
    #  rules:
    #    - when: always
    #
    #integration:
    #  stage: integration-test
    #  image: golang:1.22
    #  script: go test -shuffle on ./internal/service/test/integration/ -v --parallel 4
    #  artifacts:
    #    paths:
    #      - allure-results
    #  rules:
    #    - when: always
    #
    #e2e:
    #  stage: e2e-test
    #  image: golang:1.22
    #  script: go test -shuffle on ./internal/service/test/e2e/ -v
    #  artifacts:
    #    paths:
    #      - allure-results
    #  rules:
    #    - when: always
    #
    #report:
    #  stage: report
    #  script: allure generate allure-results -o allure-report
    #  artifacts:
    #    paths:
    #      - allure-report
    #  rules:
    #    - when: always
