events {
    worker_connections 1024;
}

http {
    # proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=mycache:64m inactive=2h max_size=2g;

    upstream app {
        server app:8080;
    }

    #upstream app-mirror {
    #    server app-mirror:8080;
    #}

    #upstream app-read {
    #    server app:8080 weight=2;
    #    server app-read1:8080;
    #    server app-read2:8080;
    #}

    server {
        listen 80;
        server_tokens off;
        server_name sigmamusic;
        proxy_hide_header Server;
        add_header Server "sigmamusic" always;

        gzip_types text/plain text/css image/svg image/svg+xml application/json;
        gzip on;

        # proxy_cache mycache;
        # proxy_cache_valid 200 302 10m;
        # proxy_cache_valid 404 1m;
        # proxy_cache_bypass $http_cache_control;
        add_header X-Proxy-Cache $upstream_cache_status;

        location /static {
            alias /static;
        }

        location = /api/v1 {
            try_files /static/dist/index.html /static/dist/index.html;
        }

        location /api/v1 {
            proxy_pass http://app;

            # proxy_no_cache 1;
            # if ($request_method ~ ^(PATCH|POST|PUT|DELETE)$) {
            #     proxy_pass http://app;
            # }
            # if ($request_method ~ ^(GET)$) {
            #     proxy_pass http://app-read;
            # }
        }

        # location /mirror/api/v1 {
        #     proxy_no_cache 1;
        #     proxy_pass http://app-mirror/api/v1;
        # }

        location /documentation {
            try_files /static/md-renderer.html /static/md-renderer.html;
        }

        location /readme {
            alias /static/README.md;
            default_type text/markdown;
        }

        location /docs/pics/ {
            alias /static/docs/pics/;
            types {
                image/svg+xml svg;
            }
            autoindex on;
        }

        location = / {
            try_files /static/index.html /static/index.html;
        }

        location = /test {
            return 301 /;
        }

        location = /admin {
            return 301 http://localhost:8888/;
        }

        location = /status {
            stub_status;
        }
    }
}
